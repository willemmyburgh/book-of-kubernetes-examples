# -*- mode: ruby -*-
# vi: set ft=ruby :
cluster = {
  "host01" => { :ip => "192.168.31.11", :cpus => 2, :mem => 2048, :ports => [3000, 5000, 9090, 9093] },
  "host02" => { :ip => "192.168.31.12", :cpus => 2, :mem => 2048 },
  "host03" => { :ip => "192.168.31.13", :cpus => 2, :mem => 2048 },
  "host04" => { :ip => "192.168.31.14", :cpus => 2, :mem => 2048 },
  "host05" => { :ip => "192.168.31.15", :cpus => 2, :mem => 2048 },
  "host06" => { :ip => "192.168.31.16", :cpus => 2, :mem => 2048 }
}
last = "host06"
groups = {
  "vagrant" => ["host01","host02","host03","host04","host05","host06"],
  "remote" => ["host01","host02","host03","host04","host05","host06"],
  "masters" => ["host01","host02","host03"],
  "nodes" => ["host04", "host05", "host06"]
}

Vagrant.configure("2") do |config|
  config.vm.box = "ubuntu/focal64"
  cluster.each do |name, data|
    config.vm.define name do |host|
      host.vm.hostname = name
      if data.key?(:ports)
        data[:ports].each do |port|
          host.vm.network "forwarded_port", guest: port, host: port
        end
      end
      host.vm.network "private_network", ip: "#{data[:ip]}"
      host.vm.provider :virtualbox do |vb, override|
        vb.cpus = data[:cpus]
        vb.memory = data[:mem]
      end
      # Provision all hosts at once for efficiency
      if name == last
        host.vm.provision :ansible do |ansible|
          ansible.limit = "all"
          ansible.playbook = "playbook.yaml"
          ansible.groups = groups
        end
      end
    end
  end
end
